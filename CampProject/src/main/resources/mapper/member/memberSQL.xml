<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">

	<select id="selectOneMember" parameterType="member" resultType="member">
		select 
			member_no as memberNo,
			member_name as memberName,
			member_phone as memberPhone,
			member_id as memberId,
			member_pw as memberPw,
			member_email as memberEmail,
			member_reg_date as memberRegDate,
			member_grade as memberGrade
		from member where member_id=#{memberId}
		<if test="memberPw != null">
			and member_pw=#{memberPw}
		</if>
	</select>
	
	<select id="selectOneMemberId" parameterType="member" resultType="member">
		select 
			member_no as memberNo,
			member_name as memberName,
			member_phone as memberPhone,
			member_id as memberId,
			member_pw as memberPw,
			member_email as memberEmail,
			member_reg_date as memberRegDate,
			member_grade
		from member where member_name=#{memberName} and member_email=#{memberEmail}
	</select>

	<select id="selectOneMemberPw" parameterType="member" resultType="member">
		select 
			member_no as memberNo,
			member_name as memberName,
			member_phone as memberPhone,
			member_id as memberId,
			member_pw as memberPw,
			member_email as memberEmail,
			member_reg_date as memberRegDate,
			member_grade
		from member where member_id=#{memberId} and member_email=#{memberEmail}
	</select>		
	
	<insert id="insertMember" parameterType="member">
		insert into member values(
			mem_seq.nextval,
			#{memberName},
			#{memberPhone},
			#{memberId},
			#{memberPw},
			#{memberEmail},
			to_char(sysdate,'yyyy-mm-dd'),
			#{memberGrade}
		)
	</insert>
	
	<select id="mypageMember" parameterType="_int" resultType="member">
		select 
			member_no as memberNo,
			member_name as memberName,
			member_phone as memberPhone,
			member_id as memberId,
			member_pw as memberPw,
			member_email as memberEmail,
			member_reg_date as memberRegDate,
			member_grade
		from member where member_no=#{_parameter} 
	</select>
	
	<select id="cntReserve" parameterType="_int" resultType="_int">
		select 
			(count(*))cnt
		from reservation where member_no=#{_parameter} 
	</select>
	
	<select id="cntReview" parameterType="String" resultType="_int">
		select 
			(count(*))cnt
		from review where member_id=#{value}
	</select>
	
	<select id="cntUsedTrade" parameterType="String" resultType="_int">
		select 
			(count(*))cnt
		from used_trade where used_trade_writer=#{value}
	</select>
	
	<select id="mypageReserve" parameterType="_int" resultType="reserveCamp">
		select 
			reserve_no as reserveNo,
			reservation.member_no as memberNo,
			reservation.camp_no as campNo,
			check_in_date as checkInDate,
			check_out_date as checkOutDate,
			reserve_status as reserveStatus,
			reserve_place as reservePlace,
			reserve_price as reservePrice,
			reserve_pw as reservePw,
			car_number as carNumber,
			reserve_memo as reserveMeno,
			camp_name as campName
		from reservation 
		join camp on (reservation.camp_no = camp.camp_no)
		where reservation.member_no=#{_parameter} order by 1 desc
	</select>
	
	<select id="mypageReview" parameterType="String" resultType="reviewCamp">
		select 
			review_no as reviewNo,
			member_id as memberId,
			reserve_no as reserveNo,
			review_title as reviewTitle,
			review_content as reviewContent,
			review_date as reviewDate,
			review_point as reviewPoint,
			review.camp_no as campNo,
			camp_name as campName
		from review	
		join camp on (review.camp_no = camp.camp_no)
		where member_id=#{value} order by 1 desc
	</select>
	
	<select id="mypageUsedTrade" parameterType="String" resultType="used">
		select 
			used_trade_no as usedNo,
			used_trade_title as usedTitle,
			used_trade_price as usedPrice,
			category,
			used_trade_writer as usedWriter,
			used_trade_content as usedContent,
			used_trade_date as usedDate,
			used_trade_area as usedArea,
			used_trade_state as usedState,
			used_trade_change as usedChange
		from used_trade where used_trade_writer=#{value} order by 1 desc
	</select>
	
	<update id="updateMember" parameterType="member">
		update member
		<set>
		<if test="!memberPw.equals('')">
			member_pw = #{memberPw},
		</if>
			member_email = #{memberEmail},
			member_phone = #{memberPhone}
		</set>
		where member_no = #{memberNo}	
	</update>
	
	<delete id="deleteMember" parameterType="_int">
		delete from member where member_no = #{_parameter}
	</delete>

	<select id="selectChangePw" parameterType="_int" resultType="String">
		select 
			member_pw
		from member where member_no = #{_parameter}
	</select>

	<update id="updateMemberPw" parameterType="member">
		update member
		set member_pw = #{memberPw}
		where member_no = #{memberNo}	
	</update>
	
</mapper>
